#!/bin/bash

<<comment

 Tilux by endormi (v.0.2.1)

 You can run the script interactively or by using arguments

 For interactive: run ./tilux and follow the choices.
 For args: e.g. ./tilux monitoring -c

comment

# `resize -s` doesn't work, so need to figure out a way to get screen size bigger

# ANSI-colors
source ansi-colors

version="v.0.2.1"
clear
echo -e "${g}
ooooooooooooo ooooo ooooo        ooooo     ooo ooooooo  ooooo
8    888    8  888   888          888       8    8888    d8
     888       888   888          888       8     Y888..8P
     888       888   888          888       8       8888
     888       888   888          888       8     .8PY888.
     888       888   888       o   88.    .8     d8    888b
    o888o     o888o o888ooooood8     YbodP     o888o  o88888o

${y}$version ${w}by Endormi \e]8;;https://github.com/endormi/tilux\a(github.com/endormi/tilux)\e]8;;\a"
sleep 3

 # I used a function since i'm using the same text multiple times
help () {
  echo -e "\\e[0;47m${bl}Help\\e[0m${w}\n"
  echo Interactive:
  echo -e "Running the files interactively ./tilux and then follow the choices\n"
  echo Args:
  echo "Running the files with args ./tilux (and then the argument e.g. cryptography -c -e)"
  echo -e "Note: The uppercase doesn't work currently with args\n"

  echo "info: host (name, OS, kernel version, DNS domain and local IP address)"
  echo "cryptography -c: ccrypt -e (for encryption) or -d (for decryption)"
  echo "cryptography -g: GPG -e (for encryption) or -d (for decryption)"
  echo "cryptography -o: Openssl -e (for encryption) or -d (for decryption)"
  echo "cryptography -p: Pyca -e (for encryption) or -d (for decryption)"
  echo "cryptography -z: Zip -e (for encryption) or -d (for decryption)"
  echo "monitoring -c: monitoring cpu processes"
  echo "monitoring -m: monitoring memory consumption"
  echo "monitoring -w: monitoring website (if it's up and if not it sends an email)"
  echo "networking -i: IP pinging"
  echo "networking -s: Server pinging"
  echo "system -b: bf (backup folder)"
  echo "system -c: clean (clean system of logs and trash)"
  echo "system -f: file updated"
  echo "system -l: last updated (file)"
  echo "system -p: parse date"
  echo "system -r: root (check if you are root or not)"
  echo "misc -d: del (Delete file or directory)"
  echo "misc -e: exists (Check if file or dir exists)"
  echo -e "misc -f: fd (number of files and folders)\n"
  echo -n "Press [ENTER] to continue..."
  read
}
info () {
  echo -e "\\e[0;47m${bl}Info\\e[0m${w}"
  echo -e "Host (name, OS, kernel version & more)\n"
}
cryptography () {
  echo -e "\\e[0;47m${bl}Cryptography\\e[0m${w}"
  echo "cryptography -c: ccrypt"
  echo "cryptography -g: GPG"
  echo "cryptography -o: Openssl"
  echo "cryptography -p: Pyca"
  echo -e "cryptography -z: Zip\n"
}
monitoring () {
  echo -e "\\e[0;47m${bl}Monitoring\\e[0m${w}"
  echo "-c: cpu_monitoring"
  echo "-m: mem_monitoring"
  echo -e "-w: website_monitoring\n"
}
networking () {
  echo -e "\\e[0;47m${bl}Networking\\e[0m${w}"
  echo "-i: ip_pinging"
  echo -e "-s: server_pinging\n"
}
sys () {
  echo -e "\\e[0;47m${bl}System\\e[0m${w}"
  echo "-b: bf (backup folder)"
  echo "-c: clean (clean system of logs and trash)"
  echo "-l: last updated (file)"
  echo "-p: parse date"
  echo -e "-r: root (check if you are root or not)\n"
}
misc () {
  echo -e "\\e[0;47m${bl}Misc.\\e[0m${w}"
  echo "-d: del (delete file or directory)"
  echo "-e: exists (file or directory)"
  echo -e "-f: fd (number of files and folders)\n"
}


# Why?
# I wanted to have the option to run using args e.g ./tilux misc
# and still have the chance to run the script instead of being an error.
info_run() {
  clear
  ./info.rb
}

ccrypt_func () {
  cmd="-e or -d"
  clear
  echo -e "\\e[0;47m${bl}ccrypt\\e[0m${w}"
  echo "-e: Encryption"
  echo -e "-d: Decryption\n"
  read -p "Type in your choice: " process
  echo

  case "$process" in
    "1" | "-e" | "--e" | "-E" | "--E")
      clear
      ./cryptography/ccrypt/ccrypt_encryption.sh
      ;;
    "2" | "-d" | "--d" | "-D" | "--D")
      clear
      ./cryptography/ccrypt/ccrypt_decryption.sh
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

gpg_func () {
  cmd="-e or -d"
  clear
  echo -e "\\e[0;47m${bl}GPG\\e[0m${w}"
  echo "-e: Encryption"
  echo -e "-d: Decryption\n"
  read -p "Type in your choice: " process
  echo

  case "$process" in
    "1" | "-e" | "--e" | "-E" | "--E")
      clear
      ./cryptography/gpg/gpg_encryption.sh
      ;;
    "2" | "-d" | "--d" | "-D" | "--D")
      clear
      ./cryptography/gpg/gpg_decryption.sh
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

openssl_func () {
  cmd="-e or -d"
  clear
  echo -e "\\e[0;47m${bl}Openssl\\e[0m${w}"
  echo "-e: Encryption"
  echo -e "-d: Decryption\n"
  read -p "Type in your choice: " process
  echo

  case "$process" in
    "1" | "-e" | "--e" | "-E" | "--E")
      clear
      ./cryptography/openssl/openssl_encryption.sh
      ;;
    "2" | "-d" | "--d" | "-D" | "--D")
      clear
      ./cryptography/openssl/openssl_decryption.sh
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

pyca_func () {
  cmd="-e or -d"
  clear
  echo -e "\\e[0;47m${bl}Pyca\\e[0m${w}"
  echo "-e: Encryption"
  echo -e "-d: Decryption\n"
  read -p "Type in your choice: " process
  echo

  case "$process" in
    "1" | "-e" | "--e" | "-E" | "--E")
      clear
      ./cryptography/pyca/encrypt.py
      ;;
    "2" | "-d" | "--d" | "-D" | "--D")
      clear
      ./cryptography/pyca/decrypt.py
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

zip_func () {
  cmd="-e or -d"
  clear
  echo -e "\\e[0;47m${bl}Zip\\e[0m${w}"
  echo "-e: Encryption"
  echo -e "-d: Decryption\n"
  read -p "Type in your choice: " process
  echo

  case "$process" in
    "1" | "-e" | "--e" | "-E" | "--E")
      clear
      ./cryptography/zip/zip_encryption.sh
      ;;
    "2" | "-d" | "--d" | "-D" | "--D")
      clear
      ./cryptography/zip/zip_decryption.sh
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

cryptography_run() {
  cmd="-c, -g, -o or -p"
  clear
  cryptography
  read -p "Type in your choice: " input_process
  echo

  case "$input_process" in
    "1" | "-c" | "--c" | "-C" | "--C")
      ccrypt_func
        ;;
    "2" | "-g" | "--g" | "-G" | "--G")
      gpg_func
        ;;
    "3" | "-o" | "--o" | "-O" | "--O")
      openssl_func
        ;;
    "4" | "-p" | "--p" | "-P" | "--P")
      pyca_func
      ;;
    "5" | "-z" | "--z" | "-Z" | "--Z")
      zip_func
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

monitoring_run() {
  cmd="-c, -m or -w"
  clear
  monitoring
  read -p "Type in your choice: " input_process
  echo

  case "$input_process" in
    "1" | "-c" | "--c" | "-C" | "--C")
      clear
      ./monitoring/cpu_monitoring.sh
      ;;
    "2" | "-m" | "--m" | "-M" | "--M")
      clear
      ./monitoring/mem_monitoring.sh
      ;;
    "3" | "-w" | "--w" | "-W" | "--W")
      clear
      ./monitoring/website_monitoring.py
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

networking_run() {
  cmd="-i or -s"
  clear
  networking
  read -p "Type in your choice: " input_process
  echo

  case "$input_process" in
    "1" | "-i" | "--i" | "-I" | "--I")
      clear
      ./networking/ip_pinging.py
      ;;
    "2" | "-s" | "--s" | "-S" | "--S")
      clear
      ./networking/server_pinging.py
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

sys_run() {
  cmd="-b, -c, -l, -p or -r"
  clear
  sys
  read -p "Type in your choice: " input_process
  echo

  case "$input_process" in
    "1" | "-b" | "--b" | "-B" | "--B")
      clear
      ./sys/bf.sh
      ;;
    "2" | "-c" | "--c" | "-C" | "--C")
      clear
      ./sys/clean.sh
      ;;
    "3" | "-f" | "--f" | "-F" | "--F")
      clear
      ./sys/file_updated.rb
      ;;
    "4" | "-l" | "--l" | "-L" | "--L")
      clear
      ./sys/last_updated.sh
      ;;
    "5" | "-p" | "--p" | "-P" | "--P")
      clear
      ./sys/parse_date.rb
      ;;
    "6" | "-r" | "--r" | "-R" | "--R")
      clear
      ./sys/root.rb
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}

misc_run() {
  cmd="-d, -e or -f"
  clear
  misc
  read -p "Type in your choice: " input_process
  echo

  case "$input_process" in
    "1" | "-d" | "--d" | "-D" | "--D")
      clear
      ./misc/del.rb
      ;;
    "2" | "-e" | "--e" | "-E" | "--E")
      clear
      ./misc/exists.rb
      ;;
    "3" | "-f" | "--f" | "-F" | "--F")
      clear
      ./misc/fd.py
      ;;
    *)
    echo Not a valid choice!
    echo Use $cmd
    exit
    ;;
  esac
}


if [[ -z "$1" ]]; then

  echo -e "\nWhat script do you want to run?\n"
  info
  cryptography
  monitoring
  networking
  sys
  misc
  echo -e "\\e[0;47m${bl}--help\\e[0m${w}"
  echo -e "How to use Tilux?\n"
  list_of_commands="Info, Cryptography, Monitoring, Networking, Sys, Misc && --help"

  sleep .7
  echo Choices: $list_of_commands
  read -p "Type in your choice: " choice
  choice="$(echo ${choice} | tr 'A-Z' 'a-z')"

  if [[ $choice == "monitoring" ]]; then
    monitoring_run

  elif [[ $choice == "info" ]]; then
    info_run

  elif [[ $choice == "cryptography" || $choice == "crypto" ]]; then
    cryptography_run

  elif [[ $choice == "networking" || $choice == "net" ]]; then
    networking_run

  elif [[ $choice == "system" || $choice == "sys" ]]; then
    sys_run

  elif [[ $choice == "misc" || $choice == "miscellaneous" || $choice == "misc." ]]; then
    misc_run

  elif [[ $choice == "help" || $choice == "--help" || $choice == "--h" ]]; then
    clear
    help

  else
    echo -e "\nNot a valid choice!"
    echo Use $list_of_commands
  fi

else

  command="e.g. ./tilux monitoring -c
  (same choices when used interactively)"

  case "$1" in
    "monitoring")
      case "$2" in
        "1" | "-c" | "--c" | "-C" | "--C")
          clear
          ./monitoring/cpu_monitoring.sh
          ;;
        "2" | "-m" | "--m" | "-M" | "--M")
          clear
          ./monitoring/mem_monitoring.sh
          ;;
        "3" | "-w" | "--w" | "-W" | "--W")
          clear
          ./monitoring/website_monitoring.py
          ;;
        *)
        monitoring_run
          ;;
      esac
      ;;

    "info")
      info_run
      ;;

    "cryptography" | "crypto")
      case "$2" in
        "1" | "-c" | "--c" | "-C" | "--C")
          case "$3" in
            "1" | "-e" | "--e" | "-E" | "--E")
              clear
              ./cryptography/ccrypt/ccrypt_encryption.sh
              ;;
            "2" | "-d" | "--d" | "-D" | "--D")
              clear
              ./cryptography/ccrypt/ccrypt_decryption.sh
              ;;
            *)
            ccrypt_func
            ;;
          esac
            ;;
        "2" | "-g" | "--g" | "-G" | "--G")
          case "$3" in
            "1" | "-e" | "--e" | "-E" | "--E")
              clear
              ./cryptography/gpg/gpg_encryption.sh
              ;;
            "2" | "-d" | "--d" | "-D" | "--D")
              clear
              ./cryptography/gpg/gpg_decryption.sh
              ;;
            *)
            gpg_func
            ;;
          esac
            ;;
        "3" | "-o" | "--o" | "-O" | "--O")
          case "$3" in
            "1" | "-e" | "--e" | "-E" | "--E")
              clear
              ./cryptography/openssl/openssl_encryption.sh
              ;;
            "2" | "-d" | "--d" | "-D" | "--D")
              clear
              ./cryptography/openssl/openssl_decryption.sh
              ;;
            *)
            openssl_func
            ;;
          esac
            ;;
        "4" | "-p" | "--p" | "-P" | "--P")
          case "$3" in
            "1" | "-e" | "--e" | "-E" | "--E")
              clear
              ./cryptography/pyca/encrypt.py
              ;;
            "2" | "-d" | "--d" | "-D" | "--D")
              clear
              ./cryptography/pyca/decrypt.py
              ;;
            *)
            pyca_func
            ;;
          esac
            ;;
        "5" | "-z" | "--z" | "-Z" | "--Z")
          case "$3" in
            "1" | "-e" | "--e" | "-E" | "--E")
              clear
              ./cryptography/zip/zip_encryption.sh
              ;;
            "2" | "-d" | "--d" | "-D" | "--D")
              clear
              ./cryptography/zip/zip_decryption.sh
              ;;
            *)
            zip_func
            ;;
          esac
            ;;
        *)
        cryptography_run
      esac
      ;;

    "networking" | "net")
      case "$2" in
        "1" | "-i" | "--i" | "-I" | "--I")
          clear
          ./networking/ip_pinging.py
          ;;
        "2" | "-s" | "--s" | "-S" | "--S")
          clear
          ./networking/server_pinging.py
          ;;
        *)
        networking_run
          ;;
      esac
      ;;

    "system" | "sys")
      case "$2" in
        "1" | "-b" | "--b" | "-B" | "--B")
          clear
          ./sys/bf.sh
          ;;
        "2" | "-c" | "--c" | "-C" | "--C")
          clear
          ./sys/clean.sh
          ;;
        "3" | "-f" | "--f" | "-F" | "--F")
          clear
          ./sys/file_updated.rb
          ;;
        "4" | "-l" | "--l" | "-L" | "--L")
          clear
          ./sys/last_updated.sh
          ;;
        "5" | "-p" | "--p" | "-P" | "--P")
          clear
          ./sys/parse_date.rb
          ;;
        "6" | "-r" | "--r" | "-R" | "--R")
          clear
          ./sys/root.rb
          ;;
        *)
        sys_run
          ;;
      esac
      ;;

    "misc")
      case "$2" in
        "1" | "-d" | "--d" | "-D" | "--D")
          clear
          ./misc/del.rb
          ;;
        "2" | "-e" | "--e" | "-E" | "--E")
          clear
          ./misc/exists.rb
          ;;
        "3" | "-f" | "--f" | "-F" | "--F")
          clear
          ./misc/fd.py
          ;;
        *)
        misc_run
          ;;
        esac
        ;;

    "help" | "--help" | "--h" | "Help" | "--Help" | "--H")
      clear
      help
      ;;
    *)
    echo Not a valid choice!
    echo Use $command
    exit
      ;;
  esac

fi
